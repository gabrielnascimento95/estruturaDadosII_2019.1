package algoritOrdenacao;

import java.util.ArrayList;
import java.util.List;

public class MergeSort {
	
	public MergeSort() {
		// TODO Auto-generated constructor stub
	}
	
	public void OrdenaMergeSort(List<Integer> listInteiros, int inicio, int fim) {
        int meio;
        if (inicio < fim) {
            meio = (inicio + fim) / 2;
            OrdenaMergeSort(listInteiros, inicio, meio);
            OrdenaMergeSort(listInteiros, meio + 1, fim);
            intercala(listInteiros, inicio, meio, fim);
        }
    }

	private void intercala(List<Integer> listInteiros, int inicio, int meio, int fim) {
		int i, j, k;
		List<Integer> listInteirosAux = new ArrayList<Integer>();
        
        for (i = inicio; i < meio; i++) {
            listInteirosAux.set(i, listInteiros.get(i));
        }
        
        for (j = meio + 1; j < fim; j++) {
            vetorB[fim + meio + 1 - j] = vetor[j];
        }
        i = inicio;
        j = fim;
        for (k = inicio; k < fim; k++) {
            if (vetorB[i] <= vetorB[j]) {
                vetor[k] = vetorB[i];
                i = i + 1;
            } else {
                vetor[k] = vetorB[j];
                j = j - 1;
            }
        }
	}
}
