package hashing;

import java.util.ArrayList;
import java.util.List;

public class HashEnderecamentoAbertoSondagemLinear {
	
	private final int tamanhoDaTabela;
	private TermoDicionario[] listDicionario;
	public final TermoDicionario eliminado = new TermoDicionario(-1, -1);
	private int colisoes = 0;

	public void imprimirTabelaHash(){
		System.out.println("-----------------------------------------------");
		for (int i=0;i<listDicionario.length;i++){
			if (listDicionario[i] == null){
				System.out.println("[" + i + "]");
			}else{
				System.out.println("[" + i + "] " + listDicionario[i].getUserID());
			}
			System.out.println("Contador de colisoes: " + this.colisoes);
		}
	}
		
	public HashEnderecamentoAbertoSondagemLinear(List<TermoDicionario> listDicionario){
		this.tamanhoDaTabela = tamTabela;
	}

	public int hash (int valor, int tentativa) {
		return (valor+tentativa) % tamanhoDaTabela;
	}
	
	public boolean insere(int userID, int movieID){
		int indice;
		for (int j=0;j<tamanhoDaTabela;j++){
			indice = hash(userID,j);
			if (dicionario[indice] == null || dicionario[indice]==eliminado){
				dicionario[indice] = new TermoDicionario(valor, significado);
				return true;
			}else colisoes++;
		}
		return false;
	}
	
	TermoDicionario busca(int chave){
		int indice;
		for (int j=0;j<tamanhoDaTabela;j++){
			indice = hash(chave,j);
			if (dicionario[indice] == null) return null;
			else if (dicionario[indice] != eliminado && dicionario[indice].valor==chave) return dicionario[indice]; 
		}
		return null;
	}

	boolean remove(int chave){
		int indice;
		for (int j=0;j<tamanhoDaTabela;j++){
			indice = hash(chave,j);
			if (dicionario[indice] == null) return false;
			else if (dicionario[indice] != eliminado && dicionario[indice].valor==chave) {
				dicionario[indice] = eliminado;
				return true; 
			}
		}
		return false;
	}
}
